{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "마켓 컬리커리커리",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Members",
      "description": "회원정보API"
    },
    {
      "name": "Goods",
      "description": "상품API"
    },
    {
      "name": "Cart",
      "description": "장바구니API"
    },
    {
      "name": "Reviews",
      "description": "후기API"
    },
    {
      "name": "QnA",
      "description": "문의API"
    }
  ],
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "any description..."
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/cart/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "put": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "delete": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/cart/all": {
      "delete": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/goods/": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/goods/{goodsId}": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "patch": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "delete": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/members/signup": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/members/login": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/members/login/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/question/": {
      "get": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "productId",
            "in": "body",
            "type": "string",
            "required": true,
            "properties": {
              "productId": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "userId, productId, secret, title, content",
            "in": "body",
            "type": "string",
            "properties": {
              "userId": { "type": "integer" },
              "productId": { "type": "integer" },
              "secret": { "type": "integer" },
              "title": { "type": "string" },
              "content": { "type": "string" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "title, content, questionId, secret, userId",
            "in": "body",
            "type": "string",
            "properties": {
              "title": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "questionId": {
                "type": "integer"
              },
              "secret": {
                "type": "integer"
              },
              "userId": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "userId, questionId",
            "in": "body",
            "type": "integer",
            "properties": {
              "userId": { "type": "integer" },
              "questionId": { "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/question/{questionId}": {
      "get": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "questionId",
            "in": "params",
            "required": true,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/answer/": {
      "post": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "questionId, answer",
            "in": "body",
            "type": "string,integer",
            "properties": {
              "questionId": { "type": "integer" },
              "answer": { "type": "string" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "questionId, answer, answerId",
            "in": "body",
            "type": "string,integer",
            "properties": {
              "questionId": { "type": "integer" },
              "answer": { "type": "string" },
              "answerId": { "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "questionId, answerId",
            "in": "body",
            "type": "integer",
            "properties": {
              "questionId": { "type": "integer" },
              "answerId": { "type": "integer" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/answer/{answerId}": {
      "get": {
        "tags": ["QnA"],
        "description": "",
        "parameters": [
          {
            "name": "answerId",
            "in": "params",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/reviews/{goodsId}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "goodsId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/reviews/reviewImages/{goodsId}": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/reviews/{reviewId}": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "signup": {
      "type": "object",
      "properties": {
        "father": {
          "type": "string",
          "example": "Simon Doe"
        },
        "mother": {
          "type": "string",
          "example": "Marie Doe"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 1
        },
        "nickname": {
          "type": "string",
          "example": "aaa"
        },
        "password": {
          "type": "string",
          "example": "1111"
        }
      },
      "required": ["nickname", "password"]
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "about": {
          "type": "string",
          "example": ""
        }
      },
      "required": ["name", "age"]
    }
  }
}
